{
  "version": 3,
  "sources": ["../../../../src/functions/listTodo.ts", "../../../../src/utils/dynamodbClient.ts"],
  "sourcesContent": ["import { APIGatewayProxyHandler } from \"aws-lambda\";\nimport { document } from \"../utils/dynamodbClient\";\n\nexport const handler: APIGatewayProxyHandler = async (event) => {\n  const { user_id } = event.pathParameters;\n\n  const response = await document\n    .scan({\n      TableName: \"todos\",\n      FilterExpression: \"user_id = :id\",\n      ExpressionAttributeValues: {\n        \":id\": user_id,\n      },\n    })\n    .promise();\n\n  return {\n    statusCode: 200,\n    body: JSON.stringify(response.Items),\n  };\n};", "import { DynamoDB } from 'aws-sdk';\n\nconst options = {\n  region: 'localhost',\n  endpoint: 'http://localhost:8000',\n  secretAccessKey: 'x',\n  accessKeyId: 'x'\n};\n\nconst isOffline = () => {\n  return process.env.IS_OFFLINE;\n};\n\nexport const document = isOffline() \n  ? new DynamoDB.DocumentClient(options)\n  : new DynamoDB.DocumentClient();"],
  "mappings": ";;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAA,qBAAyB;AAEzB,IAAM,UAAU;AAAA,EACd,QAAQ;AAAA,EACR,UAAU;AAAA,EACV,iBAAiB;AAAA,EACjB,aAAa;AACf;AAEA,IAAM,YAAY,MAAM;AACtB,SAAO,QAAQ,IAAI;AACrB;AAEO,IAAM,WAAW,UAAU,IAC9B,IAAI,wBAAS,eAAe,OAAO,IACnC,IAAI,wBAAS,eAAe;;;ADZzB,IAAM,UAAkC,OAAO,UAAU;AAC9D,QAAM,EAAE,QAAQ,IAAI,MAAM;AAE1B,QAAM,WAAW,MAAM,SACpB,KAAK;AAAA,IACJ,WAAW;AAAA,IACX,kBAAkB;AAAA,IAClB,2BAA2B;AAAA,MACzB,OAAO;AAAA,IACT;AAAA,EACF,CAAC,EACA,QAAQ;AAEX,SAAO;AAAA,IACL,YAAY;AAAA,IACZ,MAAM,KAAK,UAAU,SAAS,KAAK;AAAA,EACrC;AACF;",
  "names": []
}
